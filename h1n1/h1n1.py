#Give an unpacked h1n1 dll this will find and print all the 'encoded' strings
#Jason Reaves
#Packed loader c9f0646311b761db4bb99abcb5bbf390a1fba6e95a2aeadccb88e60cfb3de73c

import sys
import re
import binascii
from unicorn import *
from unicorn.x86_const import *

STACK = 0x90000
code_base = 0x10000000
mu = Uc(UC_ARCH_X86,UC_MODE_32)

data = open(sys.argv[1],'rb').read()
#t = re.findall(r'(\x33\xc0(.{5}\xab)+)',data)
t = re.findall(r'(33c0(.{10}ab|.{6}ab)+)',binascii.hexlify(data))

mu.mem_map(code_base, 0x1000)

mu.mem_map(STACK,4096*2)
for i in range(len(t)):
	mu.mem_write(code_base,'\x00'*0x1000)
	mu.mem_write(STACK,'\x00'*(4096*2))
	mu.mem_write(code_base, binascii.unhexlify(t[i][0]))
	mu.reg_write(UC_X86_REG_ESP,STACK+4096)
	mu.reg_write(UC_X86_REG_EDI,STACK+4096)
	try:
		mu.emu_start(code_base,code_base + len(binascii.unhexlify(t[i][0])))
	except:
		pass
	a = mu.mem_read(STACK+4096,100)
	print(str(a))
	mu.mem_write(STACK,'\x00'*(4096*2))

